NCARDS	EQU	125		1000 lines * 2 = 2000 words / 16 = 125 cards
ARRAYS	EQU	100
	ORIG	0
* Load all cards
BEGIN	ENT1	NCARDS
	ENT2	0
1H	IN	ARRAYS,2(16)
	JBUS	*(16)
  	ENT3	15		Convert words to numbers
2H	ENT4	0,2
	INC4	0,3
	ENTA	0
	LDX	ARRAYS,4
	NUM
	STA	ARRAYS,4
	DEC3	1
	J3NN	2B		Next word?
	DEC1	1
	INC2	16
	J1P	1B		Next card?
* Simultaneous selection sort on the two arrays with memory locations
* 0,2,4,...,1998 and 1,3,5,...,1999
* respectively.
*
* Registers:
* rI1 = 2 * cur size of unsorted subarray
* rI2 = cur index
* rI3 = cur argmax of array 1
* rA  = cur max of array 1
* rI4 = cur argmax of array 2
* rX  = cur max of array 2
SORT	ENT1	1998
3H	ENT2	0,1		Last index of subarray
	ENTA	0
	ENTX	0
2H	CMPA	ARRAYS,2
	JGE	*+3		Update new max/argmax of array 1
	ENT3	0,2
	LDA	ARRAYS,2
	CMPX	ARRAYS+1,2
	JGE	*+3
	ENT4	1,2
	LDX	ARRAYS+1,2
	DEC2	2
	J2NN	2B		Next element of subarray?
	STX	TMP
	LDX	ARRAYS,1	Swap the max and the last element of subarrays
	STX	ARRAYS,3
	STA	ARRAYS,1
	LDX	TMP
	LDA	ARRAYS+1,1
	STA	ARRAYS,4
	STX	ARRAYS+1,1
	DEC1	2
	J1P	3B		Next subarray?
* Tally up the differences
* rX holds the current total
TALLY	ENT1	1998
	ENTX	0
1H	LDA	ARRAYS,1
	SUB	ARRAYS+1,1
	STA	TMP(1:5)	Store the absolute difference
	LDA	TMP(0:0)	Make sure rA has positive sign
	SLAX	5
	ADD	TMP		Update the total
	SRAX	5
	DEC1	2
	J1NN	1B
	JMP	OUTPUT
* Output the answer
TMP	CON	0		I need to explicit define TMP so that TMP+1 parses properly
	ORIG	TMP+24
OUTPUT	SLAX	5
	CHAR
	STA	TMP
	STX	TMP+1
	OUT	TMP(18)
	JBUS	*(18)
	HLT
	END	BEGIN